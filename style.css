* {
  box-sizing: border-box;
}

:target:before {
  content: "";
  display: block;
  height: 100px;
  margin: -75px 0 0;
}

body {
  margin: 0;
  color: white;
  background-color: black;
  font-family: Arial, Helvetica, sans-serif;
}

h1 {
  font-family: 'Baloo 2', cursive;
  color: #46cef0;
  font-size: 52px;
}

p {
  font-size: 24px;
}

#navbar {
  overflow: hidden;
  background-color: #46cef0;
  padding: 30px 10px;
  transition: 0.4s;
  position: fixed;
  width: 100%;
  top: 0;
  z-index: 99;
}

#navbar a {
  float: left;
  color: white;
  text-align: center;
  padding: 12px;
  text-decoration: none;
  font-size: 18px;
  line-height: 25px;
  border-radius: 4px;
}

#navbar #logo {
  font-size: 70px;
  color: white;
  font-weight: bold;
  transition: 0.4s;
  font-family: 'Baloo 2', cursive;
}

#navbar-right a:hover:not(#navbar-spacer) {
  background-color: white;
  color: #46cef0;
  transition: 0.5s;
}

#navbar-right {
  float: right;
}

@media screen and (max-width: 740px) {
  #navbar {
    padding: 20px 10px !important;
  }
  #navbar a {
    float: none;
    display: block;
    text-align: left;
  }
  #navbar-right {
    float: none;
    display: none;
  }
  #logo {
    display: none !important;
  }
  #mobMenu {
    display: block !important;
  }
  #mobLogo {
    display: block !important;
  }
  #menuLocat {
    height: 84px !important;
  }
  #messageLabel {
    width: 90vw !important;
  }
  #quoteInfo {
    width: 90vw;
  }

}

#mobMenu {
  display: none;
}

#mobLogo {
  display: none;
  color: white !important;
}


/*start menu button*/

.container {
  display: inline-block;
  cursor: pointer;
}

.bar1,
.bar2,
.bar3 {
  width: 35px;
  height: 5px;
  background-color: white;
  margin: 6px 0;
  transition: 0.4s;
  border-radius: 3px;
}

.change .bar1 {
  -webkit-transform: rotate(-45deg) translate(-9px, 6px);
  transform: rotate(-45deg) translate(-9px, 6px);
}

.change .bar2 {
  opacity: 0;
}

.change .bar3 {
  -webkit-transform: rotate(45deg) translate(-8px, -8px);
  transform: rotate(45deg) translate(-8px, -8px);
}

#mobMenu {
  float: right;
}

.hide {
  display: block !important;
}


/*end menu button*/

.section {
  min-height: calc(100vh - 40px) !important;
}

input[type=text], select {
  width: 100%;
  padding: 6px 10px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

#submit {
  width: 100%;
  background-color: #46cef0;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

#submit:hover {
  background-color: white;
  color: #46cef0;
  transition: 0.2s;
}


#menuLocat {
  height: 69px; 
  position: fixed; 
  z-index: 999; 
  top: 0;
}


.form {
  display: inline-block;
  width: 46%;
}

.formNames {
  display: inline-block; 
  width: 22.65%;
}

.form, .formNames label {font-size: 20px;}



#privacyLink {
  color: white; 
  text-decoration: none;
}

#privacyLink:hover {
  color: black !important;
  transition: 0.2s;
}

.hidden {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s 0.5s, opacity 0.5s linear;
}

/* Start Donought Pie */
/**
 * 1. The `reverse` animation direction plays the animation backwards
 *    which makes it start at the stroke offset 100 which means displaying
 *    no stroke at all and animating it to the value defined in the SVG
 *    via the inline `stroke-dashoffset` attribute.
 * 2. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround (https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart/#part-4-internet-explorer-strikes-back).
 */
.circle-chart__circle {
  animation: circle-chart-fill 1s reverse; /* 1 */ 
  transform: rotate(-90deg); /* 2, 3 */
  transform-origin: center; /* 4 */
}

/**
 * 1. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 2. Scaling mirrors the circle to make the stroke move right
 *    to mark a positive chart value.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround (https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart/#part-4-internet-explorer-strikes-back).
 */
.circle-chart__circle--negative {
  transform: rotate(-90deg) scale(1,-1); /* 1, 2, 3 */
}

.circle-chart__info {
  animation: circle-chart-appear 2s forwards;
  opacity: 0;
  transform: translateY(0.3em);
}

@keyframes circle-chart-fill {
  to { stroke-dasharray: 0 100; }
}

@keyframes circle-chart-appear {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* End Donought Pie */

.animationContainer {
  animation: fadeUp 2s forwards;
  opacity: 0;
  transform: translateY(0.3em);
}

@keyframes fadeUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

#homeQuote {
  mix-blend-mode: difference;
  width: 70%;
  padding-left: 10vw;
}

@media screen and (max-width: 375px) {
  #homePie {display: none !important;}
}

.quote a {
  border-radius: 0px !important;
}

.slideshow-container {
    width: calc(100vw - 130px);
    position: relative;
    margin: auto;
}

.mySlides {
  display: none;
  height: calc(100vh - 200px);
}

.prev,
.next {
    cursor: pointer;
    position: absolute;
    top: calc(50% - 11px);
    width: auto;
    margin-top: -22px;
    padding: 16px;
    color: #a6a6a6;
    font-weight: bold;
    font-size: 30px;
    transition: .6s ease;
    border-radius: 0 3px 3px 0;
}

.next {
    right: -50px;
    border-radius: 3px 3px 3px 3px
}

.prev {
    left: -50px;
    border-radius: 3px 3px 3px 3px
}

.prev:hover, .next:hover {
    color: black;
    background-color: white
}



#quote {
  margin-left: 15px;
}

@media all and (orientation:portrait) {
  /* Styles for Portrait screen */
  .msdImg {
    width: 100%;
    height: auto;
  }
}
@media all and (orientation:landscape) {
  /* Styles for Landscape screen */
  .msdImg {
    width: auto;
    height: 70%;
  }
}

a {
  color: white;
}

#wrapper {
    width: 100%;
    border: 1px solid black;
    overflow: hidden; /* will contain if #first is longer than #second */
}
#first {
    width: 50%;
    float:left; /* add this */
    border: 1px solid red;
    height: 10px;
}
#second {
    border: 1px solid green;
    overflow: hidden; /* if you don't want #second to wrap below #first */
    height: 10px;
}